var e=Object.defineProperty,n=Object.defineProperties,r=Object.getOwnPropertyDescriptors,t=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,s=(n,r,t)=>r in n?e(n,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[r]=t,i=(e,n)=>{for(var r in n||(n={}))a.call(n,r)&&s(e,r,n[r]);if(t)for(var r of t(n))l.call(n,r)&&s(e,r,n[r]);return e};import{c as o}from"./vendor.80a0cc82.js";const u={};function p(e){var s,p=e,{components:d}=p,m=((e,n)=>{var r={};for(var s in e)a.call(e,s)&&n.indexOf(s)<0&&(r[s]=e[s]);if(null!=e&&t)for(var s of t(e))n.indexOf(s)<0&&l.call(e,s)&&(r[s]=e[s]);return r})(p,["components"]);return o("wrapper",(s=i(i({},u),m),n(s,r({components:d,mdxType:"MDXLayout"}))),o("h1",null,"Typografi"),o("h2",null,"Overskrifter"),o("p",null,"Komponentene kommer med låst semantikk og fri stil.\nDet betyr at du MÅ bruke riktig semantisk React-komponent og heller overstyre stilen om den skal se ut som noe annet.\nHusk at semantikk er viktig for mange brukere, så sørg for at sidene dine følger hierakriet med bare en h1."),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<DisplayTitle>display-title</DisplayTitle>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<H1>title-1</H1>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<H2>title-2</H2>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<H3>title-3</H3>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<H4>title-4</H4>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<Body>body</Body>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<SubBody>sub-body</SubBody>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<Tag>tag</Tag>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<Bold>Bold</Bold>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),"<Meta>Meta</Meta>\n")),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),'<a\n  className="rds-link"\n  href="#"\n  onClick={(e) => {\n    e.preventDefault();\n    e.stopProagation();\n  }}\n>\n  Link\n</a>\n')),o("h2",null,"Overstyr"),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"render=true",render:"true"}),'<DisplayTitle lookLike="body">h1 som ser ut som body</DisplayTitle>\n')),o("h2",null,"Lenker"),o("p",null,"Ut av boksen tilbys det bare stil for lenker.\nDet er fordi alle prosjekt kan ha ulike routere med ulike behov til lenkekomponentene.\nAnbefalingen er å lage en wrapper link komponent i ditt prosjekt, som legger til ",o("inlineCode",{parentName:"p"},"rds-link"),"\nsom klassenavn på din React Router, Reach Router, Wouter eller din egen lenke komponent."),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),'<a\n  className="rds-title-2 rds-link"\n  href="#"\n  onClick={(e) => {\n      e.preventDefault();\n      e.stopProagation();\n  }}\n>\n  Link as title-2\n</a>\n')),o("h3",null,"Aktiv lenke"),o("p",null,"Hvis man står på samme side som en lenke peker til, som kan skje i forskjellige menyer,\nså skal det markeres at lenken er aktiv via ",o("inlineCode",{parentName:"p"},'aria-current="page"'),".\nDet er også mulig å sette stilen direkte med ",o("inlineCode",{parentName:"p"},"rds-link--active"),". Den er gjort med text-shadow\nfor å unngå reflow av siden."),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"live=true",live:"true"}),'<a\n  className="rds-link"\n  href="#"\n  aria-current="page"\n  onClick={(e) => {\n      e.preventDefault();\n      e.stopProagation();\n  }}\n>\n  Active link\n</a>\n')),o("h2",null,"Lys bakgrunn"),o("p",null,"Denne er kun implementert for Strim per nå."),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"render=true",render:"true"}),'<LightMode\n  style={{\n    backgroundColor: "var(--surface-background)",\n    padding: "var(--rds-spacing--32)",\n    borderRadius: "var(--rds-roundness--default)",\n  }}\n>\n  <DisplayTitle>display-title</DisplayTitle>\n  <H1>title-1</H1>\n  <H2>title-2</H2>\n  <H3>title-3</H3>\n  <H4>title-4</H4>\n  <Body>body</Body>\n  <SubBody>sub-body</SubBody>\n  <Tag>tag</Tag>\n  <br />\n  <Bold>Bold</Bold>\n  <br />\n  <Meta>Meta</Meta>\n  <br />\n  <a\n    className="rds-link"\n    href="#"\n    onClick={(e) => {\n      e.preventDefault();\n      e.stopProagation();\n    }}\n  >\n    Link\n  </a>\n</LightMode>\n')),o("p",null,"Man kan også bruke ",o("inlineCode",{parentName:"p"},"lightBackground")," prop om det kun er en enkelt typografi komponent som skal mot lys bakgrunn."),o("pre",null,o("code",i({parentName:"pre"},{className:"language-tsx",metastring:"render=true",render:"true"}),'<div\n  style={{\n    backgroundColor: "var(--surface-background)",\n    padding: "var(--rds-spacing--32)",\n    borderRadius: "var(--rds-roundness--default)",\n  }}\n>\n  <H1 lightBackground={true}>title-1</H1>\n</div>\n')))}p.isMDXComponent=!0;export default p;
